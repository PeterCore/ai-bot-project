// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId     String   @id @default(uuid())
  phone      String?  @unique
  email      String?  @unique
  password   String?
  userName   String?
  avatar     String?
  nickName   String?
  provider   String?
  providerId String?
  createAt   DateTime @default(now())
  updateAt   DateTime @updatedAt

  ChatTopic ChatTopic[]

  ChatMessage ChatMessage[]
}

model ChatTopic {
  id        Int           @id @default(autoincrement())
  chatId    String        @unique @default(uuid())
  user      User          @relation(fields: [userId], references: [userId])
  userId    String
  createdAt DateTime      @default(now())
  messages  ChatMessage[]
}

model ChatMessage {
  id          Int       @id @default(autoincrement())
  messageId   Int       @unique @default(autoincrement())
  chatTopic   ChatTopic @relation(fields: [chatTopicId], references: [id])
  chatTopicId Int
  user        User      @relation(fields: [userId], references: [userId])
  userId      String
  role        Role
  content     String
  createdAt   DateTime  @default(now())
}

enum Role {
  user
  ai
}
